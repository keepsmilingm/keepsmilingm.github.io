{"title":"转载--js中if到底该如何判断变量为空","uid":"9097e217f4ba16fbf1d18b49b3a67940","slug":"js中if到底该如何判断变量为空","date":"2023-03-10T06:35:07.000Z","updated":"2023-10-12T08:35:32.902Z","comments":true,"path":"api/articles/js中if到底该如何判断变量为空.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/10c9e558efa84a15a909733da4b48bc6.jpeg","content":"<h3 id=\"js中if到底该如何判断变量为空\"><a href=\"#js中if到底该如何判断变量为空\" class=\"headerlink\" title=\"js中if到底该如何判断变量为空\"></a>js中if到底该如何判断变量为空</h3><p><a href=\"https://blog.csdn.net/weixin_42214717/article/details/127304927\">原文地址–js中if到底该如何判断变量为空</a></p>\n<p><img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/original.png\"></p>\n<p>版权声明：本文为博主原创文章，遵循 <a href=\"http://creativecommons.org/licenses/by-sa/4.0/\">CC 4.0 BY-SA</a> 版权协议，转载请附上原文出处链接和本声明。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/10c9e558efa84a15a909733da4b48bc6.jpeg\"></p>\n<p>我们项目中常常需要判断一些变量是否为空,但是由于js的机制找不到很好的方法去统一判断方式，我们不妨先了解一下js中<a href=\"https://so.csdn.net/so/search?q=if%E5%88%A4%E6%96%AD&spm=1001.2101.3001.7020\">if判断</a>机制</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>转载补充</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token string\">'100'</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">''</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// true</span>\n<span class=\"token boolean\">false</span> <span class=\"token operator\">==</span> <span class=\"token string\">''</span> <span class=\"token comment\">// true  </span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span> <span class=\"token comment\">// true </span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// true</span>\n<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n</blockquote>\n<h2 id=\"if判断机制\"><a href=\"#if判断机制\" class=\"headerlink\" title=\"if判断机制\"></a>if判断机制</h2><p>js中if会把非 Boolean <a href=\"https://so.csdn.net/so/search?q=%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E6%8D%A2&spm=1001.2101.3001.7020\">表达式转换</a>为 Boolean 值，此时遵循以下几个规则：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>①所有的对象object（数组也算object对象）都被当作 true。</p>\n<p>②”” 、null 、undefined 、0 、NaN 、false 当作 false。</p></blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a的值为空\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b是个空数组\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>所以，我们没办法用 <strong>if(变量)</strong> 来判断对象类型和数组类型，那我们能否用&#x3D;&#x3D;或者&#x3D;&#x3D;&#x3D;来判断呢？</p></blockquote>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><h2 id=\"x3D-x3D-运行机制\"><a href=\"#x3D-x3D-运行机制\" class=\"headerlink\" title=\"&#x3D;&#x3D;运行机制\"></a>&#x3D;&#x3D;运行机制</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>①判断两边是否有NaN，如果有则一律返回false</p>\n<p>②判断两边是否含有布尔值，如果有的话则将true转化为1，false转化为0。</p>\n<p>③遇到null或者undefined，则不会进行类型转换，它们相互的比较都返回true。</p>\n<p>④两边同为字符串时，直接比较</p>\n<p>⑤一边为数字一边为字符串时转换为数字进行比较</p>\n<p>⑥对象或者数组类型，则需要调用（数组使用）toString()或者（对象优先调用，不行则再调用toString()）valueOf()方法转化成简单类型，然后进行比较</p></blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>由此可见，想用 <strong>变量&#x3D;&#x3D;false</strong> 进行判断，虽然解决了空数组的判断，但是null、undefined、NaN都没办法进行正确判断</p>\n<p>所以，我们一般直接 <strong>if(变量)</strong> 判断基本类型 ， <strong>数组</strong>和<strong>对象</strong>分开讨论</p></blockquote>\n<h3 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h3><h3 id=\"数组判断是否为空\"><a href=\"#数组判断是否为空\" class=\"headerlink\" title=\"数组判断是否为空\"></a>数组判断是否为空</h3><h4 id=\"1-根据长度判断，-的长度为0\"><a href=\"#1-根据长度判断，-的长度为0\" class=\"headerlink\" title=\"1.根据长度判断，[]的长度为0\"></a>1.根据长度判断，[]的长度为0</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arr不是空数组\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-转化为字符串，和’-‘比较\"><a href=\"#2-转化为字符串，和’-‘比较\" class=\"headerlink\" title=\"2.转化为字符串，和’[]‘比较\"></a>2.转化为字符串，和’[]‘比较</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'[]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arr是空数组\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"3-数组-x3D-x3D-false进行判断\"><a href=\"#3-数组-x3D-x3D-false进行判断\" class=\"headerlink\" title=\"3.数组&#x3D;&#x3D;false进行判断\"></a>3.数组&#x3D;&#x3D;false进行判断</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arr是空数组\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h3><h3 id=\"对象判断是否为空\"><a href=\"#对象判断是否为空\" class=\"headerlink\" title=\"对象判断是否为空\"></a>对象判断是否为空</h3><h4 id=\"1-转化为字符串，和’-’比较\"><a href=\"#1-转化为字符串，和’-’比较\" class=\"headerlink\" title=\"1.转化为字符串，和’{}’比较\"></a>1.转化为字符串，和’{}’比较</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'&#123;&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj是空对象\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-遍历对象，没有属性就是空-比较繁琐\"><a href=\"#2-遍历对象，没有属性就是空-比较繁琐\" class=\"headerlink\" title=\"2.遍历对象，没有属性就是空 (比较繁琐)\"></a>2.遍历对象，没有属性就是空 (比较繁琐)</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj不是空对象\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span><span class=\"token punctuation\">&#125;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj是空对象\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"3-ES6的Object-keys-方法-将对象中的key转成一个数组，再判断数组是否为空\"><a href=\"#3-ES6的Object-keys-方法-将对象中的key转成一个数组，再判断数组是否为空\" class=\"headerlink\" title=\"3.ES6的Object.keys()方法 : 将对象中的key转成一个数组，再判断数组是否为空\"></a>3.ES6的Object.keys()方法 : 将对象中的key转成一个数组，再判断数组是否为空</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj是空对象\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"4-getOwnPropertyNames-的方法-将对象中的除原型属性以外的所有属性转成一个数组类似Object-keys\"><a href=\"#4-getOwnPropertyNames-的方法-将对象中的除原型属性以外的所有属性转成一个数组类似Object-keys\" class=\"headerlink\" title=\"4.getOwnPropertyNames()的方法 : 将对象中的除原型属性以外的所有属性转成一个数组类似Object.keys()\"></a>4.getOwnPropertyNames()的方法 : 将对象中的除原型属性以外的所有属性转成一个数组类似Object.keys()</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyNames</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj是空对象\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","feature":false,"text":"js中if到底该如何判断变量为空原文地址–js中if到底该如何判断变量为空 版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。 我们项目中常常需要判断一些变量是否为空,但是由于js的机制找不到很好的方法去统一判断方式，我们不妨...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"js","slug":"js","count":5,"path":"api/categories/js.json"}],"tags":[{"name":"js","slug":"js","count":5,"path":"api/tags/js.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#js%E4%B8%ADif%E5%88%B0%E5%BA%95%E8%AF%A5%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E5%8F%98%E9%87%8F%E4%B8%BA%E7%A9%BA\"><span class=\"toc-text\">js中if到底该如何判断变量为空</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#if%E5%88%A4%E6%96%AD%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">if判断机制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#x3D-x3D-%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">&#x3D;&#x3D;运行机制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#-1\"><span class=\"toc-text\"></span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA\"><span class=\"toc-text\">数组判断是否为空</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%A0%B9%E6%8D%AE%E9%95%BF%E5%BA%A6%E5%88%A4%E6%96%AD%EF%BC%8C-%E7%9A%84%E9%95%BF%E5%BA%A6%E4%B8%BA0\"><span class=\"toc-text\">1.根据长度判断，[]的长度为0</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%92%8C%E2%80%99-%E2%80%98%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">2.转化为字符串，和’[]‘比较</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E6%95%B0%E7%BB%84-x3D-x3D-false%E8%BF%9B%E8%A1%8C%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">3.数组&#x3D;&#x3D;false进行判断</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#-2\"><span class=\"toc-text\"></span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA\"><span class=\"toc-text\">对象判断是否为空</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%92%8C%E2%80%99-%E2%80%99%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">1.转化为字符串，和’{}’比较</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%B2%A1%E6%9C%89%E5%B1%9E%E6%80%A7%E5%B0%B1%E6%98%AF%E7%A9%BA-%E6%AF%94%E8%BE%83%E7%B9%81%E7%90%90\"><span class=\"toc-text\">2.遍历对象，没有属性就是空 (比较繁琐)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-ES6%E7%9A%84Object-keys-%E6%96%B9%E6%B3%95-%E5%B0%86%E5%AF%B9%E8%B1%A1%E4%B8%AD%E7%9A%84key%E8%BD%AC%E6%88%90%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%EF%BC%8C%E5%86%8D%E5%88%A4%E6%96%AD%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA\"><span class=\"toc-text\">3.ES6的Object.keys()方法 : 将对象中的key转成一个数组，再判断数组是否为空</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-getOwnPropertyNames-%E7%9A%84%E6%96%B9%E6%B3%95-%E5%B0%86%E5%AF%B9%E8%B1%A1%E4%B8%AD%E7%9A%84%E9%99%A4%E5%8E%9F%E5%9E%8B%E5%B1%9E%E6%80%A7%E4%BB%A5%E5%A4%96%E7%9A%84%E6%89%80%E6%9C%89%E5%B1%9E%E6%80%A7%E8%BD%AC%E6%88%90%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E7%B1%BB%E4%BC%BCObject-keys\"><span class=\"toc-text\">4.getOwnPropertyNames()的方法 : 将对象中的除原型属性以外的所有属性转成一个数组类似Object.keys()</span></a></li></ol></li></ol>","author":{"name":"Abner","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/keepsmilingm","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"微信小程序:app.js及index.js详解","uid":"3544a0d90b0e0c3822563e88d582f926","slug":"微信小程序学习：（二）app.js及index.js详解","date":"2023-03-10T06:35:07.000Z","updated":"2023-10-10T09:42:30.897Z","comments":true,"path":"api/articles/微信小程序学习：（二）app.js及index.js详解.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/20200401220041648.gif","text":"1、app.js这是小程序的入口，启动小程序时首先调用app.js。 App()注册小程序，然后内部按生命周期执行。 //app.js//注册小程序App(&#123; onLaunch: function () &#123; console.log(\"app.js初始化\") /...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Vue","slug":"Vue","count":2,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"},{"name":"缓存","slug":"缓存","count":2,"path":"api/tags/缓存.json"}],"author":{"name":"Abner","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/keepsmilingm","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"window.showModalDialog的替代方案","uid":"f89b169e24befa8d039f567cb8fa2f63","slug":"window-showModalDialog的替代方案","date":"2023-02-15T07:51:00.000Z","updated":"2023-02-15T07:52:50.289Z","comments":true,"path":"api/articles/window-showModalDialog的替代方案.json","keywords":null,"cover":null,"text":"window.showModalDialog的替代方法window.showModalDialog使用说明 该方法用于弹出弹框或新窗口，可拿到弹框返回值，是阻断性的方法子窗体通过window.returnValue&#x3D;””来传值 替代方法 window.open 该方法同...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":1,"path":"api/categories/前端.json"},{"name":"Javascript","slug":"前端/Javascript","count":1,"path":"api/categories/前端/Javascript.json"}],"tags":[{"name":"Javascript","slug":"Javascript","count":1,"path":"api/tags/Javascript.json"},{"name":"浏览器兼容","slug":"浏览器兼容","count":1,"path":"api/tags/浏览器兼容.json"},{"name":"老系统改造","slug":"老系统改造","count":1,"path":"api/tags/老系统改造.json"},{"name":"原创","slug":"原创","count":1,"path":"api/tags/原创.json"}],"author":{"name":"Abner","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/keepsmilingm","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}