{"title":"keep-alive的使用","uid":"8e824aa52ddbbaf8c82d0cbfb5a84f60","slug":"keep-alive的使用","date":"2023-03-10T06:35:07.000Z","updated":"2023-10-10T09:40:24.071Z","comments":true,"path":"api/articles/keep-alive的使用.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/20200401220041648.gif","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h2 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a><strong>应用场景</strong></h2><p>1、vue工程，很多时候希望页面不管怎么跳转，返回时候，页面都能保持之前的操作状态，</p>\n<p>2、页面跳转不用每次都执行mounted，特别很多请求数据时候，都是从mounted发起，不需要每次跳转都执行一次请求数据。</p>\n<p>这就需要使用vue的keep-alive缓存。</p>\n<h2 id=\"解决思路\"><a href=\"#解决思路\" class=\"headerlink\" title=\"解决思路\"></a>解决思路</h2><h3 id=\"一、缓存所有页面\"><a href=\"#一、缓存所有页面\" class=\"headerlink\" title=\"一、缓存所有页面\"></a>一、缓存所有页面</h3><p>如果需要缓存所有页面，就在使用router-view中地方（一般都是app.vue,但也不绝对是，就是控制要缓存的页面router跳转的上一级直接router-view的地方）外围包上<keep-alive></keep-alive>标签</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>keep-alive</span> <span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-view</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-view</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>keep-alive</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"二、缓存部分页面\"><a href=\"#二、缓存部分页面\" class=\"headerlink\" title=\"二、缓存部分页面\"></a>二、缓存部分页面</h3><p>缓存部分页面，一般有两种方式：</p>\n<p>（1）使用router.meta属性</p>\n<p>router-view文件中：（app.vue）</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>keep-alive</span> <span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-view</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$route.meta.keepAlive<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-view</span><span class=\"token punctuation\">></span></span>   //放需要缓存的组件\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>keep-alive</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-view</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>!$route.meta.keepAlive<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-view</span><span class=\"token punctuation\">></span></span>  //放不需要缓存的组件\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>路由配置文件router.js文件中，给需要缓存的路由加上meta属性，并设置值。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/usermanage'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'usermanage'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">keepAlive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//该字段表示该页面需要缓存</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">component</span><span class=\"token operator\">:</span> <span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'@/views/userManage/userManage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 路由懒加载</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>（2）使用vue-router 2.X的include、exclude两个属性，针对性的缓存相应的组件</p>\n<p>include属性表示只有name属性为a，b的组件会被缓存，（注意是组件的名字，不是路由的名字）其它组件不会被缓存exclude属性表示除了name属性为a,b的组件不会被缓存，其它组件都会被缓存</p>\n<p>在使用router-view标签的vue文件中修改：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>keep-alive</span> <span class=\"token attr-name\">include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>a,b<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-view</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-view</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>keep-alive</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>注意：上面代码中的a，b是需要缓存的组件中的的name值（a.vue中的name值），不是路由的name值。</p>\n<h3 id=\"三、页面缓存了，有的功能需要再进入后，仍然重新执行的怎么办\"><a href=\"#三、页面缓存了，有的功能需要再进入后，仍然重新执行的怎么办\" class=\"headerlink\" title=\"三、页面缓存了，有的功能需要再进入后，仍然重新执行的怎么办\"></a>三、页面缓存了，有的功能需要再进入后，仍然重新执行的怎么办</h3><p>当引入keep-alive的时候，页面<strong>第一次进入</strong>，<strong>钩子的触发顺序created-&gt; mounted-&gt; activated，退出时触发deactivated。</strong>当<strong>再次进入（前进或者后退）时，只触发activated</strong>。</p>\n<p>事件挂载的方法等，只执行一次的放在 mounted 中；组件每次进去执行的方法放在 activated 中， activated 中的不管是否需要缓存多会执行。</p>\n<p><strong>注意：当组件在 <keep-alive> 内被切换时，它的 activated 和 deactivated 这两个生命周期钩子函数将会被对应执行。</strong></p>\n<p><strong>activated：进入页面时候执行</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">activated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>deactivated：退出页面时候执行</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">deactivated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"四、执行前进刷新，后退时候缓存\"><a href=\"#四、执行前进刷新，后退时候缓存\" class=\"headerlink\" title=\"四、执行前进刷新，后退时候缓存\"></a>四、执行前进刷新，后退时候缓存</h3><p>参照五、需要在加一个变量，确定从哪里到哪里是前进，从哪里到哪里是后退</p>\n<p>（1）router.js中，A的路由设置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/usermanage'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'usermanage'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">keepAlive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//该字段表示该页面需要缓存</span>\n        <span class=\"token literal-property property\">isBack</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//用于判断上一个页面是哪个</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'人员管理'</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">component</span><span class=\"token operator\">:</span> <span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'@/views/userManage/userManage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 路由懒加载</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>（2）其他页面中，，利用路由钩子函数，修改isback这个值，</p>\n<h3 id=\"五、页面B进入页面A需要缓存，页面C进入页面A不需要缓存\"><a href=\"#五、页面B进入页面A需要缓存，页面C进入页面A不需要缓存\" class=\"headerlink\" title=\"五、页面B进入页面A需要缓存，页面C进入页面A不需要缓存\"></a>五、页面B进入页面A需要缓存，页面C进入页面A不需要缓存</h3><p><strong>思路</strong>：在每个路由的路由钩子函数beforeRouteLeave(to, from, next)钩子中设置 to.meta.keepAlive的true或者false值。</p>\n<p><strong>具体流程</strong>：</p>\n<p>（1）router.js中，A的路由设置：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">keepAlive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 需要被缓存</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>（2）C.vue文件中：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">beforeRouteLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 设置下一个路由的 meta</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>from<span class=\"token punctuation\">.</span>name<span class=\"token operator\">==</span><span class=\"token string\">\"C的路由名字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            to<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>keepAlive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// C 跳转到 A 时让 A 不缓存，即刷新，to表示要跳转的A</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>（3）B.vue</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">beforeRouteLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 设置下一个路由的 meta</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>from<span class=\"token punctuation\">.</span>name<span class=\"token operator\">==</span><span class=\"token string\">\"B的路由名字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            to<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>keepAlive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// C 跳转到 A 时让 A 不缓存，即刷新，to表示要跳转的A</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":true,"text":"应用场景1、vue工程，很多时候希望页面不管怎么跳转，返回时候，页面都能保持之前的操作状态， 2、页面跳转不用每次都执行mounted，特别很多请求数据时候，都是从mounted发起，不需要每次跳转都执行一次请求数据。 这就需要使用vue的keep-alive缓存。 解决思路一、...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Vue","slug":"Vue","count":2,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"},{"name":"缓存","slug":"缓存","count":2,"path":"api/tags/缓存.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">应用场景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解决思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E7%BC%93%E5%AD%98%E6%89%80%E6%9C%89%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">一、缓存所有页面</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E7%BC%93%E5%AD%98%E9%83%A8%E5%88%86%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">二、缓存部分页面</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E9%A1%B5%E9%9D%A2%E7%BC%93%E5%AD%98%E4%BA%86%EF%BC%8C%E6%9C%89%E7%9A%84%E5%8A%9F%E8%83%BD%E9%9C%80%E8%A6%81%E5%86%8D%E8%BF%9B%E5%85%A5%E5%90%8E%EF%BC%8C%E4%BB%8D%E7%84%B6%E9%87%8D%E6%96%B0%E6%89%A7%E8%A1%8C%E7%9A%84%E6%80%8E%E4%B9%88%E5%8A%9E\"><span class=\"toc-text\">三、页面缓存了，有的功能需要再进入后，仍然重新执行的怎么办</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%89%A7%E8%A1%8C%E5%89%8D%E8%BF%9B%E5%88%B7%E6%96%B0%EF%BC%8C%E5%90%8E%E9%80%80%E6%97%B6%E5%80%99%E7%BC%93%E5%AD%98\"><span class=\"toc-text\">四、执行前进刷新，后退时候缓存</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E9%A1%B5%E9%9D%A2B%E8%BF%9B%E5%85%A5%E9%A1%B5%E9%9D%A2A%E9%9C%80%E8%A6%81%E7%BC%93%E5%AD%98%EF%BC%8C%E9%A1%B5%E9%9D%A2C%E8%BF%9B%E5%85%A5%E9%A1%B5%E9%9D%A2A%E4%B8%8D%E9%9C%80%E8%A6%81%E7%BC%93%E5%AD%98\"><span class=\"toc-text\">五、页面B进入页面A需要缓存，页面C进入页面A不需要缓存</span></a></li></ol></li></ol>","author":{"name":"Abner","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/keepsmilingm","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JS中各种循环及其终止方式","uid":"36a6e58ce41424b667a06f36b106db92","slug":"JS循环及终止方式","date":"2023-03-10T06:35:07.000Z","updated":"2023-10-10T09:46:41.294Z","comments":true,"path":"api/articles/JS循环及终止方式.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/20200401220041648.gif","text":"一、for循环终止for循环的方式：break和continuebreak：整个循环结束 continue：退出本次循环 let list = [1, 2, 3, 4] for (let i = 0; i &lt; list.length; i++) &#123; if (i =...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"js","slug":"js","count":5,"path":"api/categories/js.json"}],"tags":[{"name":"js","slug":"js","count":5,"path":"api/tags/js.json"},{"name":"es6","slug":"es6","count":1,"path":"api/tags/es6.json"}],"author":{"name":"Abner","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/keepsmilingm","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"JS时区转换及常用时间方法","uid":"cec6974270c4beff2545a3c7d857d0fa","slug":"JS 时区转换","date":"2023-03-10T06:35:07.000Z","updated":"2023-10-10T09:47:44.511Z","comments":true,"path":"api/articles/JS 时区转换.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/20200401220041648.gif","text":"JS 时区转换 在开发中时区通常以北京时间为基准，但不排除一些框架或组件默认为其他时区，此时就需要进行时区的转换，例如tdesign中calendar组件时区默认为零时区 北京时间属于东八区。世界时间总共分为24个时区，分别是东12个时区，西12个时区。每个时区之间相隔一小时。 ...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"js","slug":"js","count":5,"path":"api/categories/js.json"}],"tags":[{"name":"js","slug":"js","count":5,"path":"api/tags/js.json"}],"author":{"name":"Abner","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/keepsmilingm","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}